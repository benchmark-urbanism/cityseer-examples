---
title: Network Preparation
editor:
  render-on-save: true
---

The below examples illustrate how to create `cityseer` compatible `networkx` graphs from various data sources, including OpenStreetMap (OSM) data and `geopandas` `GeoDataFrames`. These workflows will automatically prepare the network for you, and this should be sufficient for the great majority of cases.

If you wish to manually prepare the network, then the network nodes require `x` and `y` attributes storing the coordinates of the node in a projected coordinate system. You can also optionally add the following two attributes:

- An optional `live` attribute indicating whether to compute metrics for a given node (`live=True`) else whether to skip calculations (`live=False`). The latter case is for when you wish to include a buffered region of the network to prevent edge roll-off effects.
- An optional `weight` attribute indicating the weight of the node. `cityseer` will by default assume `weight=1` when calculating centrality metrics. Advanced users may in some cases wish to use the `weight` attribute to indicate the relative importance of a node in the network.

For edges, `cityseer` network representations contain a `geom` attribute which stores a shapely LineString geometry of the edge.

The first several examples use the [osm_graph_from_poly](https://cityseer.benchmarkurbanism.com/tools/io#osm-graph-from-poly) function available from the `cityseer` package's `io` module. This is a versatile function for generating networks from OSM data. See the first (bounding box) example for some use cases including how to use specific Coordinate Reference Systems.

## OSM network from a bounding box

Use a bounding box to create a `networkx` graph from OpenStreetMap data.

[Notebook](create_from_bbox.ipynb)

## OSM network from a buffered coordinate

Use a buffered point to create a `networkx` graph from OSM.

[Notebook](create_from_buffered_point.ipynb)

## OSM network from a boundary file

Use a custom boundary file to create a `networkx` graph from OSM.

[Notebook](network_from_bounds.ipynb)

## OSM network from a relation id

Use an OSM relation id to create a `networkx` graph from OSM.

[Notebook](network_from_relation_id.ipynb)

## Custom network from a streets dataset

Use `geopandas` to open a street network file and convert it to a `networkx` graph.

[Notebook](network_from_streets.ipynb)

## Convert a network from osmnx

Convert a network from `osmnx` to a `cityseer` compatible `networkx` graph.

[Notebook](osmnx_to_cityseer.ipynb)

## Convert a network from momepy

Convert a network from `momepy` to a `cityseer` compatible `networkx` graph.

[Notebook](momepy_to_cityseer.ipynb)

## Saving a network to a file

Save a `networkx` graph to a file.

[Notebook](save_to_file.ipynb)

## Dual graph from a primal graph

Create a dual graph representation from a primal graph.

[Notebook](create_dual_graph.ipynb)

## Custom network simplification

Manually configure network simplification steps and parameters.

[Notebook](network_simplification.ipynb)
